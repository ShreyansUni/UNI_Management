@using UNI_Management.ViewModel
@model EmployeeViewModel
@{
    var gridUrl = Url.RouteUrl("EmployeeSerachFilter");
}

<div class="row p-2" id="filter">
    <div class="col-md-12">
        <div class="row pb-5">
            <div class="col-md-12">
                <button class="btn btn-primary" id="filterButton">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-funnel" viewBox="0 0 16 16">
                        <path d="M1.5 1.5A.5.5 0 0 1 2 1h12a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.128.334L10 8.692V13.5a.5.5 0 0 1-.342.474l-3 1A.5.5 0 0 1 6 14.5V8.692L1.628 3.834A.5.5 0 0 1 1.5 3.5zm1 .5v1.308l4.372 4.858A.5.5 0 0 1 7 8.5v5.306l2-.666V8.5a.5.5 0 0 1 .128-.334L13.5 3.308V2z" />
                    </svg> Filters
                </button>
            </div>
        </div>
        <div class="card container-fluid" id="filterCard" style="display:none">
            <div class="row">
                <div class="col-md-3 my-2">
                    <div class="form-floating">
                        <input class="form-control gridFilterElements" id="txtFirstName" type="text" placeholder="First Name">
                        <label for="txtFirstName">First Name</label>
                    </div>
                </div>
                <div class="col-md-3 my-2">
                    <div class="form-floating">
                        <input class="form-control gridFilterElements" id="txtJoiningDate" type="date">
                        <label for="txtJoiningDate">Joining Date</label>
                    </div>
                </div>
                <div class="col-md-3 my-3">
                    <select name="filterType" class="form-select gridFilterElements" data-allow-clear="true" tabindex="-1" id="EmployeeTypefilter" asp-items="@(new SelectList(ViewBag.EmpTypeDropDown,"Value","Text"))" data-placeholder="BusinessName">
                        <option value="">All Type</option>
                    </select>
                </div>
                <div class="col-md-3 my-3">
                    <button class="btn btn-primary" onclick="GridPagination('employeeList_Grid',1,'@gridUrl','ClientUserID')">Search</button>
                    <button class="btn btn-dark" onclick="Clearfilter(); GridPagination('employeeList_Grid',1,'@gridUrl','ClientUserID');">Clear</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card mt-4">
    <div class="col-md-12">
        <div class="card container-fluid">
            <div class=" card-body d-flex pb-0 justify-content-between">
                <h4 class="card-title mb-0 px-2 d-inline-flex align-items-center">
                    Employee List
                </h4>
                <a class="btn btn-secondary" asp-route="EmployeeAdd">
                    <i class="fa fa-plus me-2"></i>Add Employee
                </a>
            </div>
            <div class="card-body " id="employeeList_Grid">
                <partial name="_EmployeeGrid" />

            </div>
        </div>
    </div>
</div>


@section BodyModalSection {
    <div class="modal fade" id="EmployeeViewModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="mr-2" id="mainheading">Employee Details</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="employeeViewModelBody">
                </div>
            </div>
        </div>
    </div>
}

@section BodyEndScript {
    <script>
        var getEmployeeDeleteModel = "@Url.RouteUrl("EmployeeDelete")";
        var getEmployeeViewModal = "@Url.RouteUrl("EmployeeViewModal")";
        var getDomainDeleteModel = "@Url.RouteUrl("DomainDelete")";
    </script>
    <script src="~/viewjs/pagination.js"></script>
    <script src="~/viewjs/Employee.js"></script>
}